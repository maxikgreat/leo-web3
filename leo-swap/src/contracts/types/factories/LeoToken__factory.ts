/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LeoToken, LeoTokenInterface } from "../LeoToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketAddress",
        type: "address",
      },
    ],
    name: "chargeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethRate",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vesting",
    outputs: [
      {
        internalType: "uint256",
        name: "unblockTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawToOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600d81526020017f4c656f636f646520546f6b656e00000000000000000000000000000000000000815250600090805190602001906200005192919062000165565b506040518060400160405280600381526020017f4c454f0000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f92919062000165565b506012600260006101000a81548160ff021916908360ff16021790555069152d02c7e14af6800000600355348015620000d757600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600354600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200027a565b828054620001739062000215565b90600052602060002090601f016020900481019282620001975760008555620001e3565b82601f10620001b257805160ff1916838001178555620001e3565b82800160010185558215620001e3579182015b82811115620001e2578251825591602001919060010190620001c5565b5b509050620001f29190620001f6565b5090565b5b8082111562000211576000816000905550600101620001f7565b5090565b600060028204905060018216806200022e57607f821691505b602082108114156200024557620002446200024b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611ddc806200028a6000396000f3fe6080604052600436106100e85760003560e01c806370a082311161008a578063a6f2ae3a11610059578063a6f2ae3a146102e6578063a9059cbb14610304578063d2d93f9014610341578063e388c4231461036c576100e8565b806370a08231146102285780637313ee5a146102655780638da5cb5b1461029057806395d89b41146102bb576100e8565b806323b872dd116100c657806323b872dd14610180578063313ce567146101bd5780633cb40e16146101e8578063535330c7146101ff576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610155575b600080fd5b3480156100f957600080fd5b506101026103aa565b60405161010f9190611614565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a91906113ab565b610438565b60405161014c91906115f9565b60405180910390f35b34801561016157600080fd5b5061016a61059c565b6040516101779190611756565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a2919061135c565b6105a2565b6040516101b491906115f9565b60405180910390f35b3480156101c957600080fd5b506101d261088e565b6040516101df91906117b5565b60405180910390f35b3480156101f457600080fd5b506101fd6108a1565b005b34801561020b57600080fd5b5061022660048036038101906102219190611333565b610a02565b005b34801561023457600080fd5b5061024f600480360381019061024a9190611333565b610c8a565b60405161025c9190611756565b60405180910390f35b34801561027157600080fd5b5061027a610ca2565b604051610287919061179a565b60405180910390f35b34801561029c57600080fd5b506102a5610ca7565b6040516102b291906115de565b60405180910390f35b3480156102c757600080fd5b506102d0610ccd565b6040516102dd9190611614565b60405180910390f35b6102ee610d5b565b6040516102fb9190611756565b60405180910390f35b34801561031057600080fd5b5061032b600480360381019061032691906113ab565b610fae565b60405161033891906115f9565b60405180910390f35b34801561034d57600080fd5b50610356611147565b60405161036391906117b5565b60405180910390f35b34801561037857600080fd5b50610393600480360381019061038e9190611333565b61114c565b6040516103a1929190611771565b60405180910390f35b600080546103b790611ae4565b80601f01602080910402602001604051908101604052809291908181526020018280546103e390611ae4565b80156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a290611676565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516105899190611756565b60405180910390a3600191505092915050565b60035481565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90611676565b60405180910390fd5b61061f8584611170565b82600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590611636565b60405180910390fd5b82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461072d9190611a18565b9250508190555082600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078391906117f7565b9250508190555082600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108169190611a18565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161087a9190611756565b60405180910390a360019150509392505050565b600260009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610931576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610928906116b6565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051610979906115c9565b60006040518083038185875af1925050503d80600081146109b6576040519150601f19603f3d011682016040523d82523d6000602084013e6109bb565b606091505b50509050806109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f6906116f6565b60405180910390fd5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a89906116b6565b60405180910390fd5b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa90611676565b60405180910390fd5b6000600260009054906101000a900460ff16600a610b2191906118a0565b6064610b2d91906119be565b9050806003541015610b74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6b90611736565b60405180910390fd5b80600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bc39190611a18565b9250508190555080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c1991906117f7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c7d9190611756565b60405180910390a3505050565b60056020528060005260406000206000915090505481565b600081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610cda90611ae4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0690611ae4565b8015610d535780601f10610d2857610100808354040283529160200191610d53565b820191906000526020600020905b815481529060010190602001808311610d3657829003601f168201915b505050505081565b600042600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd9906116d6565b60405180910390fd5b60003411610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c90611716565b60405180910390fd5b6000606460ff1634610e3791906119be565b9050600354811115610e7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7590611656565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ecd91906117f7565b9250508190555080600560003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f239190611a18565b925050819055506040518060400160405280600063ffffffff1642610f4891906117f7565b815260200182815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050508091505090565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611021576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101890611676565b60405180910390fd5b61102b3384611170565b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461107a9190611a18565b9250508190555082600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110d091906117f7565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516111349190611756565b60405180910390a3600191505092915050565b606481565b60076020528060005260406000206000915090508060000154908060010154905082565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905042600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154111561125357600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548161124c9190611a18565b90506112c1565b6040518060400160405280600081526020016000815250600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505b81811015611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb90611696565b60405180910390fd5b505050565b60008135905061131881611d78565b92915050565b60008135905061132d81611d8f565b92915050565b60006020828403121561134557600080fd5b600061135384828501611309565b91505092915050565b60008060006060848603121561137157600080fd5b600061137f86828701611309565b935050602061139086828701611309565b92505060406113a18682870161131e565b9150509250925092565b600080604083850312156113be57600080fd5b60006113cc85828601611309565b92505060206113dd8582860161131e565b9150509250929050565b6113f081611a4c565b82525050565b6113ff81611a5e565b82525050565b6000611410826117d0565b61141a81856117e6565b935061142a818560208601611ab1565b61143381611b74565b840191505092915050565b600061144b601f836117e6565b915061145682611b92565b602082019050919050565b600061146e6018836117e6565b915061147982611bbb565b602082019050919050565b6000611491601a836117e6565b915061149c82611be4565b602082019050919050565b60006114b4601d836117e6565b91506114bf82611c0d565b602082019050919050565b60006114d76027836117e6565b91506114e282611c36565b604082019050919050565b60006114fa6029836117e6565b915061150582611c85565b604082019050919050565b600061151d6014836117e6565b915061152882611cd4565b602082019050919050565b60006115406000836117db565b915061154b82611cfd565b600082019050919050565b60006115636024836117e6565b915061156e82611d00565b604082019050919050565b60006115866011836117e6565b915061159182611d4f565b602082019050919050565b6115a581611a8a565b82525050565b6115b481611a94565b82525050565b6115c381611aa4565b82525050565b60006115d482611533565b9150819050919050565b60006020820190506115f360008301846113e7565b92915050565b600060208201905061160e60008301846113f6565b92915050565b6000602082019050818103600083015261162e8184611405565b905092915050565b6000602082019050818103600083015261164f8161143e565b9050919050565b6000602082019050818103600083015261166f81611461565b9050919050565b6000602082019050818103600083015261168f81611484565b9050919050565b600060208201905081810360008301526116af816114a7565b9050919050565b600060208201905081810360008301526116cf816114ca565b9050919050565b600060208201905081810360008301526116ef816114ed565b9050919050565b6000602082019050818103600083015261170f81611510565b9050919050565b6000602082019050818103600083015261172f81611556565b9050919050565b6000602082019050818103600083015261174f81611579565b9050919050565b600060208201905061176b600083018461159c565b92915050565b6000604082019050611786600083018561159c565b611793602083018461159c565b9392505050565b60006020820190506117af60008301846115ab565b92915050565b60006020820190506117ca60008301846115ba565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061180282611a8a565b915061180d83611a8a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561184257611841611b16565b5b828201905092915050565b6000808291508390505b60018511156118975780860481111561187357611872611b16565b5b60018516156118825780820291505b808102905061189085611b85565b9450611857565b94509492505050565b60006118ab82611a8a565b91506118b683611aa4565b92506118e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846118eb565b905092915050565b6000826118fb57600190506119b7565b8161190957600090506119b7565b816001811461191f576002811461192957611958565b60019150506119b7565b60ff84111561193b5761193a611b16565b5b8360020a91508482111561195257611951611b16565b5b506119b7565b5060208310610133831016604e8410600b841016171561198d5782820a90508381111561198857611987611b16565b5b6119b7565b61199a848484600161184d565b925090508184048111156119b1576119b0611b16565b5b81810290505b9392505050565b60006119c982611a8a565b91506119d483611a8a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a0d57611a0c611b16565b5b828202905092915050565b6000611a2382611a8a565b9150611a2e83611a8a565b925082821015611a4157611a40611b16565b5b828203905092915050565b6000611a5782611a6a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60005b83811015611acf578082015181840152602081019050611ab4565b83811115611ade576000848401525b50505050565b60006002820490506001821680611afc57607f821691505b60208210811415611b1057611b0f611b45565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f41646472657373206e6f7420616c6c6f77656420746f207472616e7366657200600082015250565b7f4e6f7420656e6f75676820746f6b656e7320746f206275790000000000000000600082015250565b7f4164647265737320307830206973206e6f7420616c6c6f776564000000000000600082015250565b7f4e6f7420656e6f75676820746f6b656e7320746f207472616e73666572000000600082015250565b7f596f752068617665206e6f2072696768747320746f20646f2074686973206f7060008201527f65726174696f6e00000000000000000000000000000000000000000000000000602082015250565b7f596f7527766520616c726561647920626f7567687420746f6b656e73206f6e2060008201527f74686973207765656b0000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64206574686572000000000000000000000000600082015250565b50565b7f4d696e206574682076616c756520746f2062757920746f6b656e73206973203160008201527f2077656900000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b611d8181611a4c565b8114611d8c57600080fd5b50565b611d9881611a8a565b8114611da357600080fd5b5056fea2646970667358221220b087ec1e09d37b555e26dc45a5b7a498c172a54f7d5e6c79cd68bd8bead3a2f064736f6c63430008040033";

type LeoTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeoTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeoToken__factory extends ContractFactory {
  constructor(...args: LeoTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LeoToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LeoToken> {
    return super.deploy(overrides || {}) as Promise<LeoToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LeoToken {
    return super.attach(address) as LeoToken;
  }
  connect(signer: Signer): LeoToken__factory {
    return super.connect(signer) as LeoToken__factory;
  }
  static readonly contractName: "LeoToken";
  public readonly contractName: "LeoToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeoTokenInterface {
    return new utils.Interface(_abi) as LeoTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeoToken {
    return new Contract(address, _abi, signerOrProvider) as LeoToken;
  }
}
